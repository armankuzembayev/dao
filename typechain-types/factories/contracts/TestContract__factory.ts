/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestContract,
  TestContractInterface,
} from "../../contracts/TestContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_daoContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DAO",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daoContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementCounter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015303803806200153083398181016040528101906200003791906200036a565b6200006b7f175096a25417294046267a26c8a4caa2557e88fe727cc8671c79e5890018d95360001b620001d760201b60201c565b6200009f7f9a7838a327ce71745afad8d5a36c5d050edbe15251f570dbb8f73cf76ae8592260001b620001d760201b60201c565b620000d37f4834c40c642bc659e2b1986daa4ad9ce81539a70117c761d6d1baafc1465f2bb60001b620001d760201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001487f803d625ac2810587d8086b48695fd65e8d86c69f6d1d27f69242361937ec9f4860001b620001d760201b60201c565b6200017c7f062e538d9ffc24cf1ba71415069fa014561fcf50141106d64fa8b5b0104b29a960001b620001d760201b60201c565b620001d07fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620001da60201b60201c565b50620003e4565b50565b620001ec8282620001f060201b60201c565b5050565b620002028282620002e160201b60201c565b620002dd57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002826200034b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000815190506200036481620003ca565b92915050565b6000602082840312156200037d57600080fd5b60006200038d8482850162000353565b91505092915050565b6000620003a382620003aa565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620003d58162000396565b8114620003e157600080fd5b50565b61113c80620003f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635b34b966116100715780635b34b9661461016457806361bc221a1461016e57806391d148541461018c57806398fabd3a146101bc578063a217fddf146101da578063d547741f146101f8576100a9565b806301ffc9a7146100ae578063248a9ca3146100de5780632f2ff15d1461010e57806336568abe1461012a5780634a7ffcbc14610146575b600080fd5b6100c860048036038101906100c39190610b59565b610214565b6040516100d59190610d09565b60405180910390f35b6100f860048036038101906100f39190610af4565b61028e565b6040516101059190610d24565b60405180910390f35b61012860048036038101906101239190610b1d565b6102ad565b005b610144600480360381019061013f9190610b1d565b6102d6565b005b61014e610359565b60405161015b9190610cee565b60405180910390f35b61016c61037f565b005b610176610424565b6040516101839190610da1565b60405180910390f35b6101a660048036038101906101a19190610b1d565b61042a565b6040516101b39190610d09565b60405180910390f35b6101c4610494565b6040516101d19190610d24565b60405180910390f35b6101e26104b8565b6040516101ef9190610d24565b60405180910390f35b610212600480360381019061020d9190610b1d565b6104bf565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102875750610286826104e8565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b6102b68261028e565b6102c7816102c2610552565b61055a565b6102d183836105f7565b505050565b6102de610552565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461034b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034290610d81565b60405180910390fd5b61035582826106d7565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e6103b1816103ac610552565b61055a565b6103dd7fc020ee9b4b1e6a723cffa830e039778fa04c2608bdd4cf81532d5b5b2da5db9d60001b6107b8565b6104097fde981b6f6c624ff0e75690054046e3cd0cd87e7cec597d4acca0a08eac6ea0a860001b6107b8565b6001600081548092919061041c90610f6e565b919050555050565b60015481565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7fd0a4ad96d49edb1c33461cebc6fb2609190f32c904e3c3f5877edb4488dee91e81565b6000801b81565b6104c88261028e565b6104d9816104d4610552565b61055a565b6104e383836106d7565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610564828261042a565b6105f3576105898173ffffffffffffffffffffffffffffffffffffffff1660146107bb565b6105978360001c60206107bb565b6040516020016105a8929190610cb4565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ea9190610d3f565b60405180910390fd5b5050565b610601828261042a565b6106d357600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610678610552565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6106e1828261042a565b156107b457600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610759610552565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b50565b6060600060028360026107ce9190610e39565b6107d89190610de3565b67ffffffffffffffff811115610817577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156108495781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106108a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610931577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026109719190610e39565b61097b9190610de3565b90505b6001811115610a67577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106109e3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110610a20577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610a6090610f44565b905061097e565b5060008414610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa290610d61565b60405180910390fd5b8091505092915050565b600081359050610ac4816110c1565b92915050565b600081359050610ad9816110d8565b92915050565b600081359050610aee816110ef565b92915050565b600060208284031215610b0657600080fd5b6000610b1484828501610aca565b91505092915050565b60008060408385031215610b3057600080fd5b6000610b3e85828601610aca565b9250506020610b4f85828601610ab5565b9150509250929050565b600060208284031215610b6b57600080fd5b6000610b7984828501610adf565b91505092915050565b610b8b81610e93565b82525050565b610b9a81610ea5565b82525050565b610ba981610eb1565b82525050565b6000610bba82610dbc565b610bc48185610dc7565b9350610bd4818560208601610f11565b610bdd81610fe6565b840191505092915050565b6000610bf382610dbc565b610bfd8185610dd8565b9350610c0d818560208601610f11565b80840191505092915050565b6000610c26602083610dc7565b9150610c3182610ff7565b602082019050919050565b6000610c49601783610dd8565b9150610c5482611020565b601782019050919050565b6000610c6c601183610dd8565b9150610c7782611049565b601182019050919050565b6000610c8f602f83610dc7565b9150610c9a82611072565b604082019050919050565b610cae81610f07565b82525050565b6000610cbf82610c3c565b9150610ccb8285610be8565b9150610cd682610c5f565b9150610ce28284610be8565b91508190509392505050565b6000602082019050610d036000830184610b82565b92915050565b6000602082019050610d1e6000830184610b91565b92915050565b6000602082019050610d396000830184610ba0565b92915050565b60006020820190508181036000830152610d598184610baf565b905092915050565b60006020820190508181036000830152610d7a81610c19565b9050919050565b60006020820190508181036000830152610d9a81610c82565b9050919050565b6000602082019050610db66000830184610ca5565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610dee82610f07565b9150610df983610f07565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2e57610e2d610fb7565b5b828201905092915050565b6000610e4482610f07565b9150610e4f83610f07565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8857610e87610fb7565b5b828202905092915050565b6000610e9e82610ee7565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610f2f578082015181840152602081019050610f14565b83811115610f3e576000848401525b50505050565b6000610f4f82610f07565b91506000821415610f6357610f62610fb7565b5b600182039050919050565b6000610f7982610f07565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fac57610fab610fb7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6110ca81610e93565b81146110d557600080fd5b50565b6110e181610eb1565b81146110ec57600080fd5b50565b6110f881610ebb565b811461110357600080fd5b5056fea264697066735822122090981d0945286d27520e34ae2d086ab0ed4e034f0e8d93f70a4eb7ab6f8e21ea64736f6c63430008040033";

type TestContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestContract__factory extends ContractFactory {
  constructor(...args: TestContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _daoContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestContract> {
    return super.deploy(_daoContract, overrides || {}) as Promise<TestContract>;
  }
  override getDeployTransaction(
    _daoContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_daoContract, overrides || {});
  }
  override attach(address: string): TestContract {
    return super.attach(address) as TestContract;
  }
  override connect(signer: Signer): TestContract__factory {
    return super.connect(signer) as TestContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractInterface {
    return new utils.Interface(_abi) as TestContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContract {
    return new Contract(address, _abi, signerOrProvider) as TestContract;
  }
}
